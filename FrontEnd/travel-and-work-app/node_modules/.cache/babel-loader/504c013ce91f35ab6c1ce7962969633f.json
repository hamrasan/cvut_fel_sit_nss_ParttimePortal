{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\Desktop\\\\\\u0160kola\\\\4 Sem\\\\RSP\\\\Dev\\\\rsproject\\\\FrontEnd\\\\travel-and-work-app\\\\src\\\\Components\\\\Admin\\\\Trip\\\\Create.js\";\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Col, Button, Row } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Create extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      achievements: null,\n      show: true,\n      categories: null\n    };\n\n    this.fetchAchievementsHandler = async () => {\n      const response = await fetch(`http://localhost:8080/achievement`);\n      const data = await response.json();\n      console.log(data); //show: false -> add class name to button and hide it\n\n      this.setState({\n        achievements: data,\n        show: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(`http://localhost:8080/category`);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      categories: data\n    });\n  }\n\n  render() {\n    let possibleXPrewardOptions = [];\n\n    for (let i = 0; i < 25; i++) {\n      possibleXPrewardOptions.push( /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 42\n        }\n      }, i + 1));\n    }\n\n    let categoryOptions = null;\n\n    if (this.state.categories !== null) {\n      if (this.state.categories.length > 0) {\n        let categoriesArray = [];\n        this.state.categories.forEach(element => {\n          categoriesArray.push( /*#__PURE__*/React.createElement(\"option\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 42\n            }\n          }, element.name));\n        });\n        categoryOptions = /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"select\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }\n        }, categoriesArray);\n      }\n    }\n\n    let requiredAchievements = null;\n    let gainAchievements = null;\n\n    if (this.state.achievements !== null) {\n      if (this.state.achievements.length > 0) {\n        let achievementsArray = [];\n        this.state.achievements.forEach(element => {\n          let achievementElement = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Check.Label, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Form.Check.Input, {\n            type: \"checkbox\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }\n          }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: element.icon,\n            size: \"lg\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }\n          }), element.name));\n          achievementsArray.push(achievementElement);\n        });\n        requiredAchievements = /*#__PURE__*/React.createElement(Form.Group, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }\n        }, \"Required achievements\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-column align-items-start ml-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }\n        }, achievementsArray));\n        gainAchievements = /*#__PURE__*/React.createElement(Form.Group, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }\n        }, \"Gain achievements\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-column align-items-start ml-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }\n        }, achievementsArray));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"mt-3 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Create trip\"), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"Name of trip\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridShortName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"Identificatation name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter unique key for trip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridDeposit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, \"Deposit\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter deposite price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridExperience\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, \"Required level\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter minimum reqiured level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"exampleForm.ControlSelect1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Possible XP reward\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, possibleXPrewardOptions)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"exampleForm.ControlSelect1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"Category\"), categoryOptions)), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGridLocation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Hotel Super, London Street 12, Manchester, England\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"button\",\n      onClick: () => this.fetchAchievementsHandler(),\n      className: this.state.show ? \"\" : \"d-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Achievements\"), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      className: \"pl-5\",\n      controlId: \"formGridName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, requiredAchievements), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      className: \"pl-5\",\n      controlId: \"formGridName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, gainAchievements)), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Create;","map":{"version":3,"sources":["C:/Users/asher/Desktop/Škola/4 Sem/RSP/Dev/rsproject/FrontEnd/travel-and-work-app/src/Components/Admin/Trip/Create.js"],"names":["React","Form","Col","Button","Row","Container","FontAwesomeIcon","Create","Component","state","achievements","show","categories","fetchAchievementsHandler","response","fetch","data","json","console","log","setState","componentDidMount","render","possibleXPrewardOptions","i","push","categoryOptions","length","categoriesArray","forEach","element","name","requiredAchievements","gainAchievements","achievementsArray","achievementElement","icon"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Col, Button, Row } from \"react-bootstrap\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Create extends React.Component {\r\n    state = { achievements: null, show: true, categories: null };\r\n\r\n    fetchAchievementsHandler = async () => {\r\n        const response = await fetch(`http://localhost:8080/achievement`);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        //show: false -> add class name to button and hide it\r\n        this.setState({ achievements: data, show: false });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch(`http://localhost:8080/category`);\r\n        const data = await response.json();\r\n        console.log(data);\r\n        this.setState({ categories: data });\r\n    }\r\n\r\n    render() {\r\n        let possibleXPrewardOptions = [];\r\n        for (let i = 0; i < 25; i++) {\r\n            possibleXPrewardOptions.push(<option>{i + 1}</option>);\r\n        }\r\n\r\n        let categoryOptions = null;\r\n        if (this.state.categories !== null) {\r\n            if (this.state.categories.length > 0) {\r\n                let categoriesArray = [];\r\n\r\n                this.state.categories.forEach(element => {\r\n                    categoriesArray.push(<option>{element.name}</option>);\r\n                });\r\n                categoryOptions = (\r\n                    <Form.Control as=\"select\">{categoriesArray}</Form.Control>\r\n                );\r\n            }\r\n        }\r\n\r\n        let requiredAchievements = null;\r\n        let gainAchievements = null;\r\n        if (this.state.achievements !== null) {\r\n            if (this.state.achievements.length > 0) {\r\n                let achievementsArray = [];\r\n                this.state.achievements.forEach(element => {\r\n                    let achievementElement = (\r\n                        <>\r\n                            <Form.Check.Label>\r\n                                <Form.Check.Input type=\"checkbox\" />\r\n                                <FontAwesomeIcon\r\n                                    icon={element.icon}\r\n                                    size=\"lg\"\r\n                                />\r\n                                {element.name}\r\n                            </Form.Check.Label>\r\n                        </>\r\n                    );\r\n                    achievementsArray.push(achievementElement);\r\n                });\r\n                requiredAchievements = (\r\n                    <Form.Group>\r\n                        <Form.Label>Required achievements</Form.Label>\r\n                        <div className=\"d-flex flex-column align-items-start ml-5\">\r\n                            {achievementsArray}\r\n                        </div>\r\n                    </Form.Group>\r\n                );\r\n                gainAchievements = (\r\n                    <Form.Group>\r\n                        <Form.Label>Gain achievements</Form.Label>\r\n                        <div className=\"d-flex flex-column align-items-start ml-5\">\r\n                            {achievementsArray}\r\n                        </div>\r\n                    </Form.Group>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <Form className=\"mt-3 mb-5\">\r\n                    <h1>Create trip</h1>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridName\">\r\n                            <Form.Label>Name of trip</Form.Label>\r\n                            <Form.Control placeholder=\"Enter name\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridShortName\">\r\n                            <Form.Label>Identificatation name</Form.Label>\r\n                            <Form.Control placeholder=\"Enter unique key for trip\" />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridDeposit\">\r\n                            <Form.Label>Deposit</Form.Label>\r\n                            <Form.Control placeholder=\"Enter deposite price\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridExperience\">\r\n                            <Form.Label>Required level</Form.Label>\r\n                            <Form.Control placeholder=\"Enter minimum reqiured level\" />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group\r\n                            as={Col}\r\n                            controlId=\"exampleForm.ControlSelect1\"\r\n                        >\r\n                            <Form.Label>Possible XP reward</Form.Label>\r\n                            <Form.Control as=\"select\">\r\n                                {possibleXPrewardOptions}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group\r\n                            as={Col}\r\n                            controlId=\"exampleForm.ControlSelect1\"\r\n                        >\r\n                            <Form.Label>Category</Form.Label>\r\n                            {categoryOptions}\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group controlId=\"formGridLocation\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control placeholder=\"Hotel Super, London Street 12, Manchester, England\" />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"5\" />\r\n                    </Form.Group>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.fetchAchievementsHandler()}\r\n                        className={this.state.show ? \"\" : \"d-none\"}\r\n                    >\r\n                        Achievements\r\n                    </Button>\r\n                    <Form.Row>\r\n                        <Form.Group\r\n                            as={Col}\r\n                            className=\"pl-5\"\r\n                            controlId=\"formGridName\"\r\n                        >\r\n                            {requiredAchievements}\r\n                        </Form.Group>\r\n                        <Form.Group\r\n                            as={Col}\r\n                            className=\"pl-5\"\r\n                            controlId=\"formGridName\"\r\n                        >\r\n                            {gainAchievements}\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Create;\r\n"]},"metadata":{},"sourceType":"module"}