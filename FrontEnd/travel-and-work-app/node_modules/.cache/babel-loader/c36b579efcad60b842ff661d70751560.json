{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\Desktop\\\\\\u0160kola\\\\4 Sem\\\\RSP\\\\Dev\\\\rsproject\\\\FrontEnd\\\\travel-and-work-app\\\\src\\\\Components\\\\Admin\\\\Category\\\\Create.js\";\nimport React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Col, Button, Row } from \"react-bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport ButtonInRow from \"../../SmartGadgets/ButtonInRow\";\nimport rules from \"../../../Files/validationRules.json\";\nimport { formValidation, validationFeedback, validationClassName } from \"../../../Validator\";\n\nclass Create extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      category: {\n        name: null\n      },\n      form: {\n        isValid: false,\n        elements: {\n          name: {\n            touched: false,\n            valid: false,\n            validationRules: rules.category.name\n          }\n        }\n      }\n    };\n\n    this.submitHandler = async event => {\n      event.preventDefault();\n      await this.validateForm();\n\n      if (this.state.form.isValid) {\n        fetch(\"http://localhost:8080/category\", {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(this.state.category)\n        }).then(response => {\n          if (response.ok) this.props.history.push(\"/category\"); //TODO - osetrenie vynimiek\n          else console.log(\"Error: somethhing goes wrong\");\n        });\n      }\n    };\n\n    this.inputUpdateHandler = async (event, nameOfFormInput, number = false) => {\n      const newState = { ...this.state.category\n      };\n      let input = event.target.value;\n\n      if (number) {\n        input = event.target.value.replace(/,/g, \".\");\n      }\n\n      newState[nameOfFormInput] = input;\n      await this.setState({\n        category: newState\n      });\n\n      if (this.state.form.elements[nameOfFormInput].touched) {\n        this.validateForm();\n      }\n    };\n\n    this.validateForm = async () => {\n      const newState = { ...this.state.form\n      };\n      formValidation(newState, this.state.category);\n      await this.setState({\n        form: newState\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonInRow, {\n      variant: \"danger\",\n      link: \"/category\",\n      side: \"left\",\n      label: \"\",\n      back: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      className: \"mt-3 mb-5\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Create category\"), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, \"Name of category\"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: validationClassName(\"name\", this.state.form),\n      placeholder: \"Enter name\",\n      onChange: event => this.inputUpdateHandler(event, \"name\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, validationFeedback(\"name\", this.state.form))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Create;","map":{"version":3,"sources":["C:/Users/asher/Desktop/Å kola/4 Sem/RSP/Dev/rsproject/FrontEnd/travel-and-work-app/src/Components/Admin/Category/Create.js"],"names":["React","Form","Col","Button","Row","Container","ButtonInRow","rules","formValidation","validationFeedback","validationClassName","Create","Component","state","category","name","form","isValid","elements","touched","valid","validationRules","submitHandler","event","preventDefault","validateForm","fetch","method","mode","headers","body","JSON","stringify","then","response","ok","props","history","push","console","log","inputUpdateHandler","nameOfFormInput","number","newState","input","target","value","replace","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Col, Button, Row } from \"react-bootstrap\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport ButtonInRow from \"../../SmartGadgets/ButtonInRow\";\r\nimport rules from \"../../../Files/validationRules.json\";\r\nimport {\r\n    formValidation,\r\n    validationFeedback,\r\n    validationClassName,\r\n} from \"../../../Validator\";\r\n\r\nclass Create extends React.Component {\r\n    state = {\r\n        category: { name: null },\r\n        form: {\r\n            isValid: false,\r\n            elements: {\r\n                name: {\r\n                    touched: false,\r\n                    valid: false,\r\n                    validationRules: rules.category.name,\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        await this.validateForm();\r\n        if (this.state.form.isValid) {\r\n            fetch(\"http://localhost:8080/category\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(this.state.category),\r\n            }).then((response) => {\r\n                if (response.ok) this.props.history.push(\"/category\");\r\n                //TODO - osetrenie vynimiek\r\n                else console.log(\"Error: somethhing goes wrong\");\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update state from input.\r\n     * @param {event} event\r\n     * @param {String} nameOfFormInput,\r\n     */\r\n    inputUpdateHandler = async (event, nameOfFormInput, number = false) => {\r\n        const newState = { ...this.state.category };\r\n        let input = event.target.value;\r\n        if (number) {\r\n            input = event.target.value.replace(/,/g, \".\");\r\n        }\r\n        newState[nameOfFormInput] = input;\r\n        await this.setState({ category: newState });\r\n        if (this.state.form.elements[nameOfFormInput].touched) {\r\n            this.validateForm();\r\n        }\r\n    };\r\n\r\n    validateForm = async () => {\r\n        const newState = { ...this.state.form };\r\n        formValidation(newState, this.state.category);\r\n        await this.setState({ form: newState });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <ButtonInRow\r\n                    variant=\"danger\"\r\n                    link=\"/category\"\r\n                    side=\"left\"\r\n                    label=\"\"\r\n                    back={true}\r\n                />\r\n\r\n                <Form className=\"mt-3 mb-5\" onSubmit={this.submitHandler}>\r\n                    <h1>Create category</h1>\r\n\r\n                    <Form.Group as={Col} controlId=\"formGridName\">\r\n                        <Form.Label>Name of category</Form.Label>\r\n                        <Form.Control\r\n                            className={validationClassName(\r\n                                \"name\",\r\n                                this.state.form\r\n                            )}\r\n                            placeholder=\"Enter name\"\r\n                            onChange={(event) =>\r\n                                this.inputUpdateHandler(event, \"name\", true)\r\n                            }\r\n                        />\r\n                        <div class=\"invalid-feedback\">\r\n                            {validationFeedback(\"name\", this.state.form)}\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Create;\r\n"]},"metadata":{},"sourceType":"module"}