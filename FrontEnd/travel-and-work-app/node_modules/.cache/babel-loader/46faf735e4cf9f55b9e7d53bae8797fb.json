{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\Desktop\\\\\\u0160kola\\\\4 Sem\\\\RSP\\\\Dev\\\\rsproject\\\\FrontEnd\\\\travel-and-work-app\\\\src\\\\Components\\\\Home\\\\Trip\\\\Detail.js\";\nimport React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Row, Col, Container, Image, ListGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { Form } from \"react-bootstrap\";\nimport AchievmentModal from \"../../SmartGadgets/AchievementModal\";\n\nclass Detail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      trip: null\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(`http://localhost:8080/trip/` + this.props.match.params.id);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      trip: data\n    });\n  }\n\n  render() {\n    if (this.state.trip === null) {\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"p-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }, \"Loading...\")));\n    } else {\n      //set correct date(s)\n      let options = null;\n      let dateTitle = \"Date\";\n\n      if (this.state.trip.sessions.length == 1) {\n        //set one date when only one session\n        const session = this.state.trip.sessions[0];\n        options = /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }\n        }, session.from_date + \" \" + session.to_date);\n      } else if (this.state.trip.sessions.length > 1) {\n        //create list of options for select when more sessions(dates)\n        let optionArray = [];\n        this.state.trip.sessions.forEach(element => {\n          optionArray.push( /*#__PURE__*/React.createElement(\"option\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }\n          }, element.from_date + \" \" + element.to_date));\n        });\n        options = /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"select\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }\n        }, optionArray);\n        dateTitle = \"Dates\";\n      } //setting acheivments\n\n\n      let requiredAchievements = \"none\";\n      let gainAchievements = \"none\";\n\n      if (this.state.trip.required_achievements.length > 0) {\n        requiredAchievements = [];\n        this.state.trip.required_achievements.forEach(element => {\n          requiredAchievements.push( /*#__PURE__*/React.createElement(ListGroup.Item, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(AchievmentModal, {\n            titleBeforeIcon: true,\n            icon: element.icon,\n            title: element.name,\n            description: element.description,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }\n          })));\n        });\n      }\n\n      if (this.state.trip.gain_achievements.length > 0) {\n        gainAchievements = [];\n        this.state.trip.gain_achievements.forEach(element => {\n          gainAchievements.push( /*#__PURE__*/React.createElement(ListGroup.Item, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(AchievmentModal, {\n            titleBeforeIcon: true,\n            icon: element.icon,\n            title: element.name,\n            description: element.description,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }\n          })));\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"d-flex flex-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: \"https://pbs.twimg.com/profile_images/617828221707513856/ygo8Rtr__400x400.jpg\",\n        rounded: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"d-flex flex-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }\n      }, this.state.trip.name)), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"mb-2 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      }, \"Location\"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }\n      }, this.state.trip.location), /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"mb-2 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 41\n        }\n      }, \"Points\"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 41\n        }\n      }, this.state.trip.possible_xp_reward), /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"mb-2 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 41\n        }\n      }, dateTitle), options), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }, \"dsadsa\"))))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: \"18rem\"\n        },\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 37\n        }\n      }, \"Informations about trip\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 37\n        }\n      }, \"Deposit\"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 37\n        }\n      }, this.state.trip.deposit), /*#__PURE__*/React.createElement(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 37\n        }\n      }, \"Minimum level required\"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }\n      }, this.state.trip.requiered_level))), /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: \"18rem\"\n        },\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 37\n        }\n      }, \"Required achievements\"), /*#__PURE__*/React.createElement(ListGroup, {\n        variant: \"flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 37\n        }\n      }, requiredAchievements))), /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: \"18rem\"\n        },\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 37\n        }\n      }, \"Gain achievements\"), /*#__PURE__*/React.createElement(ListGroup, {\n        variant: \"flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 37\n        }\n      }, gainAchievements)))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 37\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 37\n        }\n      }, this.state.trip.description))))));\n    }\n  }\n\n}\n\nexport default Detail;","map":{"version":3,"sources":["C:/Users/asher/Desktop/Škola/4 Sem/RSP/Dev/rsproject/FrontEnd/travel-and-work-app/src/Components/Home/Trip/Detail.js"],"names":["React","Card","FontAwesomeIcon","Button","Row","Col","Container","Image","ListGroup","Link","axios","Spinner","Form","AchievmentModal","Detail","Component","state","trip","componentDidMount","response","fetch","props","match","params","id","data","json","console","log","setState","render","options","dateTitle","sessions","length","session","from_date","to_date","optionArray","forEach","element","push","requiredAchievements","gainAchievements","required_achievements","icon","name","description","gain_achievements","location","possible_xp_reward","width","deposit","requiered_level"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Row, Col, Container, Image, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport AchievmentModal from \"../../SmartGadgets/AchievementModal\";\r\n\r\nclass Detail extends React.Component {\r\n    state = { trip: null };\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch(\r\n            `http://localhost:8080/trip/` + this.props.match.params.id\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        this.setState({ trip: data });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.trip === null) {\r\n            return (\r\n                <Container className=\"p-5\">\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>\r\n                </Container>\r\n            );\r\n        } else {\r\n            //set correct date(s)\r\n            let options = null;\r\n            let dateTitle = \"Date\";\r\n            if (this.state.trip.sessions.length == 1) {\r\n                //set one date when only one session\r\n                const session = this.state.trip.sessions[0];\r\n                options = (\r\n                    <Card.Text>\r\n                        {session.from_date + \" \" + session.to_date}\r\n                    </Card.Text>\r\n                );\r\n            } else if (this.state.trip.sessions.length > 1) {\r\n                //create list of options for select when more sessions(dates)\r\n                let optionArray = [];\r\n                this.state.trip.sessions.forEach(element => {\r\n                    optionArray.push(\r\n                        <option>\r\n                            {element.from_date + \" \" + element.to_date}\r\n                        </option>\r\n                    );\r\n                });\r\n                options = (\r\n                    <Form.Control as=\"select\">{optionArray}</Form.Control>\r\n                );\r\n                dateTitle = \"Dates\";\r\n            }\r\n\r\n            //setting acheivments\r\n            let requiredAchievements = \"none\";\r\n            let gainAchievements = \"none\";\r\n            if (this.state.trip.required_achievements.length > 0) {\r\n                requiredAchievements = [];\r\n                this.state.trip.required_achievements.forEach(element => {\r\n                    requiredAchievements.push(\r\n                        <ListGroup.Item>\r\n                            <AchievmentModal\r\n                                titleBeforeIcon={true}\r\n                                icon={element.icon}\r\n                                title={element.name}\r\n                                description={element.description}\r\n                            />\r\n                        </ListGroup.Item>\r\n                    );\r\n                });\r\n            }\r\n            if (this.state.trip.gain_achievements.length > 0) {\r\n                gainAchievements = [];\r\n                this.state.trip.gain_achievements.forEach(element => {\r\n                    gainAchievements.push(\r\n                        <ListGroup.Item>\r\n                            <AchievmentModal\r\n                                titleBeforeIcon={true}\r\n                                icon={element.icon}\r\n                                title={element.name}\r\n                                description={element.description}\r\n                            />\r\n                        </ListGroup.Item>\r\n                    );\r\n                });\r\n            }\r\n\r\n            return (\r\n                <Container>\r\n                    <Card className=\"mb-3\">\r\n                        <Card.Body className=\"d-flex flex-row\">\r\n                            <Col>\r\n                                <Image\r\n                                    src=\"https://pbs.twimg.com/profile_images/617828221707513856/ygo8Rtr__400x400.jpg\"\r\n                                    rounded\r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                <Row className=\"d-flex flex-column\">\r\n                                    <Card.Title>\r\n                                        {this.state.trip.name}\r\n                                    </Card.Title>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Card.Title className=\"mb-2 text-muted\">\r\n                                            Location\r\n                                        </Card.Title>\r\n                                        <Card.Text>\r\n                                            {this.state.trip.location}\r\n                                        </Card.Text>\r\n                                        <Card.Title className=\"mb-2 text-muted\">\r\n                                            Points\r\n                                        </Card.Title>\r\n                                        <Card.Text>\r\n                                            {this.state.trip.possible_xp_reward}\r\n                                        </Card.Text>\r\n                                        <Card.Title className=\"mb-2 text-muted\">\r\n                                            {dateTitle}\r\n                                        </Card.Title>\r\n                                        {options}\r\n                                    </Col>\r\n                                    <Col>dsadsa</Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card style={{ width: \"18rem\" }} className=\"mb-3\">\r\n                                <Card.Body>\r\n                                    <Card.Title>\r\n                                        Informations about trip\r\n                                    </Card.Title>\r\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                        Deposit\r\n                                    </Card.Subtitle>\r\n                                    <Card.Text>\r\n                                        {this.state.trip.deposit}\r\n                                    </Card.Text>\r\n                                    <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                        Minimum level required\r\n                                    </Card.Subtitle>\r\n                                    <Card.Text>\r\n                                        {this.state.trip.requiered_level}\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                            <Card style={{ width: \"18rem\" }} className=\"mb-3\">\r\n                                <Card.Body>\r\n                                    <Card.Title>\r\n                                        Required achievements\r\n                                    </Card.Title>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        {requiredAchievements}\r\n                                    </ListGroup>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                            <Card style={{ width: \"18rem\" }} className=\"mb-3\">\r\n                                <Card.Body>\r\n                                    <Card.Title>Gain achievements</Card.Title>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        {gainAchievements}\r\n                                    </ListGroup>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col>\r\n                            <Card className=\"mb-5\">\r\n                                <Card.Body>\r\n                                    <Card.Title>Description</Card.Title>\r\n\r\n                                    <Card.Text>\r\n                                        {this.state.trip.description}\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;\r\n"]},"metadata":{},"sourceType":"module"}